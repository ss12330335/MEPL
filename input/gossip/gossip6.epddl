(define (domain gossip6)
  (:objects
   a
   b
   c
   d
   e
   f - secret
  )
  (:agents
   a
   b
   c
   d
   e
   f
  )
  (:predicates (the ?se - secret))
  (:action call
   :category (communication)
   :parameters (?ag1 - agent ?ag2 - agent ?ag3 - agent ?ag4 - agent ?ag5 - agent ?ag6 - agent )
   :precondition (or 
                    (K_?ag1(and (the ?ag1) (not (K_?ag2 (the ?ag1)))))
                    (K_?ag1(and (the ?ag3) (not (K_?ag2 (the ?ag3)))))
                    (K_?ag1(and (the ?ag4) (not (K_?ag2 (the ?ag4)))))
                    (K_?ag1(and (the ?ag5) (not (K_?ag2 (the ?ag5)))))
                    (K_?ag1(and (the ?ag6) (not (K_?ag2 (the ?ag6)))))
                 )
   :effect (<{(True)}
             {(and (K_?ag1 (the ?ag2)) (K_?ag2 (the ?ag1)))}>
            <{(K_?ag1 (the ?ag3))}
             {(K_?ag2 (the ?ag3))}>
            <{(K_?ag1 (the ?ag4))}
             {(K_?ag2 (the ?ag4))}>
            <{(K_?ag1 (the ?ag5))}
             {(K_?ag2 (the ?ag5))}>
            <{(K_?ag1 (the ?ag6))}
             {(K_?ag2 (the ?ag6))}>
            <{(K_?ag2 (the ?ag3))}
             {(K_?ag1 (the ?ag3))}>
            <{(K_?ag2 (the ?ag4))}
             {(K_?ag1 (the ?ag4))}>
            <{(K_?ag2 (the ?ag5))}
             {(K_?ag1 (the ?ag5))}>
            <{(K_?ag2 (the ?ag6))}
             {(K_?ag1 (the ?ag6))}>
           )
  )
  (:init (and 
            (the a)
            (the b)
            (the c)
            (the d)
            (the e)
            (the f)
            (K_a (the a))
            (K_b (the b))
            (K_c (the c))
            (K_d (the d))
            (K_e (the e))
            (K_f (the f))
            (not (K_a (the b)))
            (not (K_a (the c)))
            (not (K_a (the d)))
            (not (K_a (the e)))
            (not (K_a (the f)))
            (not (K_b (the a)))
            (not (K_b (the c)))
            (not (K_b (the d)))
            (not (K_b (the e)))
            (not (K_b (the f)))
            (not (K_c (the a)))
            (not (K_c (the b)))
            (not (K_c (the d)))
            (not (K_c (the e)))
            (not (K_c (the f)))
            (not (K_d (the a)))
            (not (K_d (the b)))
            (not (K_d (the c)))
            (not (K_d (the e)))
            (not (K_d (the f)))
            (not (K_e (the a)))
            (not (K_e (the b)))
            (not (K_e (the c)))
            (not (K_e (the d)))
            (not (K_e (the f)))
            (not (K_f (the a)))
            (not (K_f (the b)))
            (not (K_f (the c)))
            (not (K_f (the d)))
            (not (K_f (the e)))
            (K_a (and 
                (not (K_b (the a)))
                (not (K_c (the a)))
                (not (K_d (the a)))
                (not (K_e (the a)))
                (not (K_f (the a)))
            ))
            (K_b (and 
                (not (K_a (the b)))
                (not (K_c (the b)))
                (not (K_d (the b)))
                (not (K_e (the b)))
                (not (K_f (the b)))
            ))
            (K_c (and 
                (not (K_a (the c)))
                (not (K_b (the c)))
                (not (K_d (the c)))
                (not (K_e (the c)))
                (not (K_f (the c)))
            ))
            (K_d (and 
                (not (K_a (the d)))
                (not (K_b (the d)))
                (not (K_c (the d)))
                (not (K_e (the d)))
                (not (K_f (the d)))
            ))
            (K_e (and 
                (not (K_a (the e)))
                (not (K_b (the e)))
                (not (K_c (the e)))
                (not (K_d (the e)))
                (not (K_f (the e)))
            ))
            (K_f (and 
                (not (K_a (the f)))
                (not (K_b (the f)))
                (not (K_c (the f)))
                (not (K_d (the f)))
                (not (K_e (the f)))
            ))
  ))
  (:constraint (True))
  (:goal (and
            (K_a (and (the a) (the b) (the c) (the d) (the e) (the f) ))
            (K_b (and (the a) (the b) (the c) (the d) (the e) (the f) ))
            (K_c (and (the a) (the b) (the c) (the d) (the e) (the f) ))
            (K_d (and (the a) (the b) (the c) (the d) (the e) (the f) ))
            (K_e (and (the a) (the b) (the c) (the d) (the e) (the f) ))
            (K_f (and (the a) (the b) (the c) (the d) (the e) (the f) ))
  ))
)