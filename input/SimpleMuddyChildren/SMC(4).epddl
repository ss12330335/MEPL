(define (domain smc4)
  (:objects
  )

  (:agents
    a
    b
    c
    d
  )

  (:predicates
    (mud ?ag - agent)
  )

  (:action sense
   :category (sensing)
   :parameters (?ag1 - agent ?ag2 - agent)
   :precondition (True)
   :observe_pos (K_?ag1 (mud ?ag2))
   :observe_neg (K_?ag1 (not (mud ?ag2)))
  )

  (:action ask
   :category (sensing)
   :parameters (?ag1 - agent ?ag2 - agent ?ag3 - agent ?ag4 - agent )
   :precondition (or (K_?ag1 (mud ?ag2))
                     (K_?ag1 (not (mud ?ag2))))
   :observe_pos (K_?ag1 (or
                  (and (mud ?ag2) (not (mud ?ag1)) (not (mud ?ag3)) (not (mud ?ag4)))
                  (and (not (mud ?ag2)) (mud ?ag1) (mud ?ag3) (mud ?ag4)))
                )
   :observe_neg (K_?ag1 (or
              (and (mud ?ag1) (mud ?ag2) (mud ?ag3) (not (mud ?ag4)))
              (and (mud ?ag1) (mud ?ag2) (not (mud ?ag3)) (mud ?ag4))
              (and (mud ?ag1) (mud ?ag2) (not (mud ?ag3)) (not (mud ?ag4)))
              (and (not (mud ?ag1)) (mud ?ag2) (mud ?ag3) (mud ?ag4))
              (and (not (mud ?ag1)) (mud ?ag2) (mud ?ag3) (not (mud ?ag4)))
              (and (not (mud ?ag1)) (mud ?ag2) (not (mud ?ag3)) (mud ?ag4))
              (and (mud ?ag1) (not (mud ?ag2)) (mud ?ag3) (not (mud ?ag4)))
              (and (mud ?ag1) (not (mud ?ag2)) (not (mud ?ag3)) (mud ?ag4))
              (and (mud ?ag1) (not (mud ?ag2)) (not (mud ?ag3)) (not (mud ?ag4)))
              (and (not (mud ?ag1)) (not (mud ?ag2)) (mud ?ag3) (mud ?ag4))
              (and (not (mud ?ag1)) (not (mud ?ag2)) (mud ?ag3) (not (mud ?ag4)))
              (and (not (mud ?ag1)) (not (mud ?ag2)) (not (mud ?ag3)) (mud ?ag4))
  )))

  (:init (K_a 
          (or
              (and (mud a) (mud b) (mud c) (not (mud d)))
              (and (mud a) (mud b) (not (mud c)) (mud d))
              (and (mud a) (mud b) (not (mud c)) (not (mud d)))
              (and (mud a) (not (mud b)) (mud c) (mud d))
              (and (mud a) (not (mud b)) (mud c) (not (mud d)))
              (and (mud a) (not (mud b)) (not (mud c)) (mud d))
              (and (mud a) (not (mud b)) (not (mud c)) (not (mud d)))
              (and (not (mud a)) (mud b) (mud c) (mud d))
              (and (not (mud a)) (mud b) (mud c) (not (mud d)))
              (and (not (mud a)) (mud b) (not (mud c)) (mud d))
              (and (not (mud a)) (mud b) (not (mud c)) (not (mud d)))
              (and (not (mud a)) (not (mud b)) (mud c) (mud d))
              (and (not (mud a)) (not (mud b)) (mud c) (not (mud d)))
              (and (not (mud a)) (not (mud b)) (not (mud c)) (mud d))
  )))

  (:constraint (True)
  )

  (:goal (or (K_a (mud a)) (K_a (not (mud a)))))
)
